using Common.Domain.ValueObjects;
using System.ComponentModel.DataAnnotations;
using TGF.CA.Domain.Primitives;

namespace APIGateway.Domain.Entities
{

    /// <summary>
    /// Represents a log entry for user consent.
    /// </summary>
    public class ConsentLog : Entity<Guid>
    {
        /// <summary>
        /// Gets or sets the IP address of the user who provided consent.
        /// </summary>
        /// <value>The IP address of the user, encrypted with a max lenght of 100 characters.</value>
        [MaxLength(100)]  // larger than the max IPv6 lenght to accommodate longer encrypted strings
        public required string IpAddress { get; set; }

        /// <summary>
        /// Gets or sets the date and time when the consent was given.
        /// </summary>
        /// <value>The date and time of consent, generated by the database.</value>
        public required DateTimeOffset ConsentDate { get; set; }

        /// <summary>
        /// Gets or sets the type of consent provided by the user.
        /// </summary>
        /// <value>The type of consent.</value>
        public required ConsentTypeEnum ConsentType { get; set; }

        /// <summary>
        /// Gets or sets the version of the privacy policy that the user accepted.
        /// </summary>
        /// <value>The privacy policy version, with a maximum length of 50 characters.</value>
        [MaxLength(50)]
        public required string PrivacyPolicyVersion { get; set; }

        /// <summary>
        /// Gets or sets the method through which the user provided consent.
        /// </summary>
        /// <value>The consent method.</value>
        public required ConsentMethodEnum ConsentMethod { get; set; }

        /// <summary>
        /// Gets or sets the user agent string of the user's browser.
        /// </summary>
        /// <value>The user agent string, which is optional.</value>
        public string? UserAgent { get; set; }

        /// <summary>
        /// Gets or sets the geolocation information derived from the user's IP address.
        /// </summary>
        /// <value>The geolocation information, which is optional.</value>
        public string? Geolocation { get; set; }
    }

}
